#TITLE
Gender chart

#TEXT
### Firtly, lets draw some graphs to see general information. There is our gender statistic pie chart:

#METHOD 
generate_gender_chart

#CODE
def generate_gender_chart(self):
    value_counts_gender = self.df['Gender'].value_counts()
    fig_gender = go.Figure(data=[
    go.Pie(
        labels=value_counts_gender.index,
        values=value_counts_gender.values,
        hole=0.6,
        marker=dict(colors=['rgb(135, 206, 235)', 'rgb(238, 130, 238)']),
        textinfo='label+percent'
        )
    ])

    fig_gender.update_layout(
        title_text='Gender Stats',
        template='plotly_dark',
        showlegend=False
    )
    return fig_gender

#TITLE
Occupation chart

#TEXT
### Then, occupation pie chart:

#METHOD
generate_occupation_chart

#CODE
def generate_occupation_chart(self):
    # group occupation data
    value_counts_occupation = self.df['Occupation'].value_counts()

    # set occupation statistics
    fig_occupation = go.Figure(data=[
        go.Pie(
            labels=value_counts_occupation.index,
            values=value_counts_occupation.values,
            hole=0.3,
            textinfo='label+percent'
        )
    ])

    # decorate
    fig_occupation.update_layout(
        title_text='Occupation Stats',
        template='plotly_dark',
        showlegend=False
    )

    # show
    return fig_occupation

#TEXT
### The chart shows a heavy concentration in medical and technical professions, as nurses, doctors and engineers together account for more than 55% of the total. Management-related roles (like Manager and Sales Representative) and specific technical roles (like Software Engineer and Scientist) occupy a minimal share of less than 3% combined. This suggests a workforce distribution favoring healthcare, education and technical fields over managerial or niche technical roles.

#TITLE
Stress lvl vs Occupation

#TEXT
### May be stress level is occured by occupation:

#METHOD
generate_stress_occupation_chart

#CODE
def generate_stress_occupation_chart(self):
    # group data
    average_stress_table = self.df.groupby('Occupation').agg(
        average_stress_level=('Stress Level', 'mean'),
        count=('Stress Level', 'size')
    ).reset_index()

    # sort
    average_stress_table = average_stress_table.sort_values(by='average_stress_level',
                                                            ascending=False
    )

    # draw the graph
    fig_chart_occupation_stress = px.bar(
            average_stress_table,
            x='Occupation',
            y='average_stress_level',
            title='Occupation increases Stress Level',
            labels={'average_stress_level': 'Average Stress Level', 'Occupation': 'Occupation'},
            text='count',
            hover_data={'count': True}
    )

    # decorate
    fig_chart_occupation_stress.update_layout(xaxis_title="Occupation",
                                            yaxis_title="Average Stress Level",
                                            xaxis_tickangle=-45,
                                            template='plotly_dark'
    )

    # show the graph
    return fig_chart_occupation_stress

#TEXT
### The chart is a bar graph showing the average stress levels experienced by individuals in various occupations.

#TEXT
### Healthcare professions (Nurses and Doctors) are the most stressful, likely due to the high stakes and demanding nature of their work. Technical roles like Engineers also experience significant stress, but Software Engineers seem to face minimal stress. Management and Sales-related roles appear to have the least stress, perhaps due to differences in responsibility, work environment or coping mechanisms.

#TEXT
### This data suggests that stress levels correlate strongly with the nature of work, responsibility and the emotional or physical demands of the role. It may prompt organizations to focus on stress management strategies, especially for healthcare and engineering professionals.

#TITLE
2D histogram

#TEXT
### Draw 2D histogram to compare sleep duration and stress level:

#METHOD
generate_spray_graph

#CODE
def generate_spray_graph(self):
    fig_spray = go.Figure()
    # add sleep duration data
    fig_spray.add_trace(go.Histogram2d(
        x = self.df['Age'],
        y = self.df['Sleep Duration'],
        colorscale=[
            [0, 'rgba(0, 0, 0, 0)'],
            [0.5, 'rgba(0, 130, 180, 0.5)'],
            [1, 'rgb(0, 130, 180)']
        ],
        nbinsx=60,
        nbinsy=30,
        opacity=0.75,
        colorbar=dict(title='Sleep Freq', x=1.0),
        showscale=True
    ))

    # add stress level data
    fig_spray.add_trace(go.Histogram2d(
        x = self.df['Age'],
        y = self.df['Stress Level'],
        colorscale=[
            [0, 'rgba(0, 0, 0, 0)'],
            [0.5, 'rgba(205, 92, 92, 0.5)'],
            [1, 'rgb(205, 92, 92)']
        ],
        nbinsx=60,
        nbinsy=30,
        opacity=0.75,
        colorbar=dict(title='Stress Freq', x=1.2),
        showscale=True
    ))

    # decorate
    fig_spray.update_layout(
        title='Sleep Duration vs Stress Level',
        xaxis_title='Age',
        yaxis_title='Value',
        barmode='overlay',
        template='plotly_dark'
    )

    # show
    return fig_spray

#TITLE
Careful overview of 2D

#TEXT
### Lets look at the main tendense more carefully.

#METHOD
generate_average_chart

#CODE
def generate_average_chart(self):
    # find every useful points
    def fnd(values: list) -> tuple:
        peaks = []
        downs = []
        mx = max(values)
        mn = min(values)
        for i in range(1, len(values) - 1):
            if values[i] > values[i - 1] and values[i] > values[i + 1] and values[i] != mx:
                peaks.append(i)
            elif values[i] < values[i - 1] and values[i] < values[i + 1] and values[i] != mn:
                downs.append(i)
        return downs, peaks

    fig_graph = go.Figure()
    
    # group data into two columns by average values: average sleep and average stress
    grouped_df = self.df.groupby('Age').agg(
        average_sleep=('Sleep Duration', 'mean'),
        average_stress=('Stress Level', 'mean')
    ).reset_index()

    # find peaks and downs
    sleep_min = grouped_df.loc[grouped_df["average_sleep"].idxmin()]
    sleep_max = grouped_df.loc[grouped_df["average_sleep"].idxmax()]

    stress_min = grouped_df.loc[grouped_df["average_stress"].idxmin()]
    stress_max = grouped_df.loc[grouped_df["average_stress"].idxmax()]

    # finding them
    sleep_mins, sleep_maxes = fnd(grouped_df['average_sleep'].values)
    stress_mins, stress_maxes = fnd(grouped_df['average_stress'].values)

    # define common line styles
    line_styles = {
        "average_sleep": dict(color='rgb(0, 130, 180)'),
        "average_stress": dict(color='rgb(205, 92, 92)'),
    }

    marker_styles = {
        "sleep_down": dict(color='blue', size=10, symbol="triangle-down"),
        "sleep_up": dict(color='blue', size=10, symbol="triangle-up"),
        "stress_down": dict(color='red', size=10, symbol="triangle-down"),
        "stress_up": dict(color='red', size=10, symbol="triangle-up"),
        "peak_marker": dict(size=10, symbol="arrow-bar-up"),
    }

    # add average lines
    for metric, style in line_styles.items():
        fig_graph.add_trace(go.Scatter(
            x=grouped_df['Age'],
            y=grouped_df[metric],
            mode='lines',
            name=f'Average {metric.split("_")[1]}',
            line=style
        ))

    # add markers for sleep and stress changes
    changes = [
        ("Age", "average_sleep", sleep_maxes, "sleep_down"),
        ("Age", "average_sleep", sleep_mins, "sleep_up"),
        ("Age", "average_stress", stress_maxes, "stress_down"),
        ("Age", "average_stress", stress_mins, "stress_up"),
    ]

    for age_col, metric_col, indices, marker_key in changes:
        fig_graph.add_trace(go.Scatter(
            x=grouped_df[age_col].iloc[indices],
            y=grouped_df[metric_col].iloc[indices],
            mode='markers',
            name=marker_key.replace('_', ' ').title(),
            marker=marker_styles[marker_key]
        ))

    # add peaks and downs
    peak_data = [
        ("Age", "average_sleep", sleep_min, sleep_max, 'blue', 'Sleep peak'),
        ("Age", "average_stress", stress_min, stress_max, 'red', 'Stress peak'),
    ]

    for age_col, metric_col, min_data, max_data, color, name in peak_data:
        fig_graph.add_trace(go.Scatter(
            x=[min_data[age_col], max_data[age_col]],
            y=[min_data[metric_col], max_data[metric_col]],
            mode='markers+text',
            name=name,
            text=["min", "max"],
            textposition="top center",
            marker=dict(color=color, **marker_styles["peak_marker"])
        ))

    # decorate
    fig_graph.update_layout(
        title='Average Sleep vs Average Stress',
        xaxis_title='Age',
        yaxis_title='Average Values',
        legend_title='Value',
        template='plotly_dark'
    )

    # show
    return fig_graph

#TEXT
### These diagrams compare two variables (average sleep and average stress) across different age groups.

#TEXT
### These diagrams suggests a clear interaction between stress and sleep across different age groups. Managing stress around key ages, such as mid-30s and 50, could potentially stabilize sleep patterns. Long-term stress management might help mitigate the sharp declines in sleep seen at stress peaks.

#TITLE
Physical activity, Sleep and Stress

#TEXT
### Also we can see that Sleep Duration and Stress level have strong inverse dependence. Lets draw some more graphs to find some more patterns.

#METHOD
generate_phys_sleep_chart

#CODE
def generate_phys_sleep_chart(self):
    fig_phyz = go.Figure()
    # group data by average values
    grouped_df = self.df.groupby('Age').agg(
        average_physical=('Physical Activity Level', 'mean'),
        average_quality=('Quality of Sleep', 'mean'),
        average_stress=('Stress Level', 'mean')
    ).reset_index()

    # add average sleep quality line
    fig_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_quality'],
        mode='lines',
        name='Average quality of sleep',
        line=dict(color='rgb(0, 130, 180)')
    ))

    # add average stress level line
    fig_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_stress'],
        mode='lines',
        name='Average Stress Level',
        line=dict(color='rgb(205, 92, 92)')
    ))

    # add physical activity line
    fig_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_physical'] / 10,
        mode='lines',
        name='Average Physical Activity Level',
        line=dict(color='orange')
    ))

    # decorate
    fig_phyz.update_layout(
        title='Average Sleep Quality vs Average Stress Level vs Average Physical Activity',
        xaxis_title='Age',
        yaxis_title='Average values',
        legend_title='Value',
        template='plotly_dark'
    )

    # show
    return fig_phyz

#TEXT
### The diagram compares three variables — sleep quality (blue line), stress level (red line) and physical activity level (yellow line) — across different age groups.

#TEXT
### There is a clear interaction between stress, sleep quality physical activity:

#TEXT
### Higher physical activity correlates with reduced stress and better sleep.

#TEXT
### Stress spikes seem to disrupt sleep quality and activity levels.

#TEXT
### Encouraging consistent physical activity across all age groups might help maintain lower stress and improve sleep quality, particularly during stress-prone periods like mid-30s and early 50s.

#TEXT
### We obtain, that after 35 yo there a bit linear dependence between physical activity and stress level. I am going to look at the patterns between sleep duration, quality of sleep and physical activity.

#TITLE
Physical activity, Sleep Duration and Quality

#METHOD
generate_duration_vs_quality_vs_phys_chart

#CODE
def generate_duration_vs_quality_vs_phys_chart(self):
    fig_duration_vs_quality_vs_phyz = go.Figure()
    # group data by average values
    grouped_df = self.df.groupby('Age').agg(
        average_physical=('Physical Activity Level', 'mean'),
        average_quality=('Quality of Sleep', 'mean'),
        average_duration=('Sleep Duration', 'mean')
    ).reset_index()

    # add average sleep quality line
    fig_duration_vs_quality_vs_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_quality'],
        mode='lines',
        name='Average Quality of Sleep',
        line=dict(color='rgb(0, 130, 180)')
    ))

    # add average sleep duration line
    fig_duration_vs_quality_vs_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_duration'],
        mode='lines',
        name='Average Sleep Duration',
        line=dict(color='rgb(205, 92, 92)')
    ))

    # add average physical activity line
    fig_duration_vs_quality_vs_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_physical'] / 10,
        mode='lines',
        name='Average Physical Activity Level',
        line=dict(color='orange')
    ))

    # decorate
    fig_duration_vs_quality_vs_phyz.update_layout(
        title='Average Quality of Sleep vs Average Sleep Duration vs Average Physical Activity',
        xaxis_title='Age',
        yaxis_title='Average values',
        legend_title='Value',
        template='plotly_dark'
    )

    # show
    return fig_duration_vs_quality_vs_phyz

#TEXT
### The diagram compares three metrics — sleep quality (blue line), sleep duration (red line) and physical activity level (yellow line) — across various age groups.

#TEXT
### The data suggests a positive correlation between physical activity and better sleep outcomes (both quality and duration). For instance, the spike in activity around age 50 aligns with improvements in sleep metrics. Stress or lifestyle changes around age 35 could explain the concurrent decline in sleep quality, duration and activity levels. Maintaining physical activity levels, especially after age 50, may help preserve sleep quality even as natural aging occurs.

#TEXT
### We can see that there is such a big dependence, but from 45 till 54 there is exception. After previous analise I can mention, that level of stress affects the physical activity. But lets look at numeratic statistics.

#TITLE
Pearson's diagram

#TEXT
### I am using Pearson's correlation formula.

#METHOD
generate_pearsons_mtx

#CODE
def generate_pearsons_mtx(self):
    interest_columns = ['Sleep Duration', 'Quality of Sleep', 'Physical Activity Level', 'Stress Level']
    grouped_df = self.df[interest_columns]

    correl_mtx = grouped_df.corr(method='pearson')
    fig_temp = px.imshow(
        correl_mtx,
        text_auto=True,
        color_continuous_scale='RdBu',
        range_color=[-1, 1],
        labels=dict(color="Pearson's Corellation"),
        x=correl_mtx.columns,
        y=correl_mtx.index,
        title="Pearson's Correlations"
    )

    fig_temp.update_layout(
        xaxis_title="Values",
        yaxis_title="Values",
        template='plotly_dark'
    )

    return fig_temp

#TEXT
### This table compares corellations between Sleep Duration. Quality of Sleep, Physical Activity Level and Stress Level.

#TEXT
### More equal to 1 = linear dependence

#TEXT
### More equal to -1 = inverse dependence

#TEXT
### 0 means there is no dependence

#TEXT
### So, sleep duration and sleep quality extremly decrease stress level, physical activity increases a bit sleep duration and quality of sleep, but physical activity has almost no effect on stress level.

#TITLE
Conclusion

#TEXT
# Conclusion

#TEXT
### Key Stress Points: The mid-30s and early 50s are critical ages where stress peaks significantly affect sleep and activity levels.

#TEXT
### Role of Physical Activity: Regular physical activity emerges as a vital factor in mitigating stress and enhancing both sleep quality and duration.

#TEXT
### Workforce Dynamics: Stress levels vary widely by profession, with healthcare workers requiring targeted interventions to manage their high stress loads.

#TEXT
### Recommendations: Organizations and individuals should focus on promoting stress management strategies, encouraging physical activity and maintaining work-life balance to optimize health and well-being across professions and age groups.
