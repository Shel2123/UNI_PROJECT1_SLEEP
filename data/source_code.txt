#TITLE
Gender Chart

#TEXT
### To commence, it is quite important to present general data that is fundamental to the research. Please refer to the attached pie-chart, which can give you the idea of the distribution of our study participants: 

#METHOD 
generate_gender_chart

#CODE
def generate_gender_chart(self):
    value_counts_gender = self.df['Gender'].value_counts()
    fig_gender = go.Figure(data=[
    go.Pie(
        labels=value_counts_gender.index,
        values=value_counts_gender.values,
        hole=0.6,
        marker=dict(colors=['rgb(135, 206, 235)', 'rgb(238, 130, 238)']),
        textinfo='label+percent'
        )
    ])

    fig_gender.update_layout(
        title_text='Gender Stats',
        template='plotly_dark',
        showlegend=False
    )
    return fig_gender

#TITLE
Occupation Chart

#TEXT
### The next one can provide information regarding the participants’ occupations: 

#METHOD
generate_occupation_chart

#CODE
def generate_occupation_chart(self):
    # group occupation data
    value_counts_occupation = self.df['Occupation'].value_counts()

    # set occupation statistics
    fig_occupation = go.Figure(data=[
        go.Pie(
            labels=value_counts_occupation.index,
            values=value_counts_occupation.values,
            hole=0.3,
            textinfo='label+percent'
        )
    ])

    # decorate
    fig_occupation.update_layout(
        title_text='Occupation Stats',
        template='plotly_dark',
        showlegend=False
    )

    # show
    return fig_occupation

#TEXT
### Moving on to the following chart, we observe a significant concentration in medical and technical professions. Nurses, doctors and engineers collectively account for more than 55% of the total workforce. Conversely, management-related roles (such as Manager and Sales Representative) and specific technical roles (such as Software Engineer and Scientist) occupy a relatively small share, collectively comprising less than 3%. This distribution indicates a preference for healthcare, education and technical fields over managerial or niche technical roles.

#TITLE
Stress vs Occupation

#TEXT
### If we propose a strong correlation between occupational stress levels and one’s profession, we can construct the following diagram: 

#METHOD
generate_stress_occupation_chart

#CODE
def generate_stress_occupation_chart(self):
    # group data
    average_stress_table = self.df.groupby('Occupation').agg(
        average_stress_level=('Stress Level', 'mean'),
        count=('Stress Level', 'size')
    ).reset_index()

    # sort
    average_stress_table = average_stress_table.sort_values(by='average_stress_level',
                                                            ascending=False
    )

    # draw the graph
    fig_chart_occupation_stress = px.bar(
            average_stress_table,
            x='Occupation',
            y='average_stress_level',
            title='Occupation increases Stress Level',
            labels={'average_stress_level': 'Average Stress Level', 'Occupation': 'Occupation'},
            text='count',
            hover_data={'count': True}
    )

    # decorate
    fig_chart_occupation_stress.update_layout(xaxis_title="Occupation",
                                            yaxis_title="Average Stress Level",
                                            xaxis_tickangle=-45,
                                            template='plotly_dark'
    )

    # show the graph
    return fig_chart_occupation_stress

#TEXT
### The next provided chart is a bar graph that presents the average stress levels experienced by individuals across diverse occupational categories.

#TEXT
### We can witness a significant correlation between stress levels and the nature of work, the level of responsibility assigned and the emotional or physical demands of the role. This discovery may prompt organizations to prioritize stress management strategies, particularly for healthcare and engineering professionals.

#TEXT
### This data suggests that stress levels correlate strongly with the nature of work, responsibility and the emotional or physical demands of the role. It may prompt organizations to focus on stress management strategies, especially for healthcare and engineering professionals.

#TITLE
2D Histogram

#TEXT
### To illustrate this phenomenon, we can construct a two-dimensional histogram to compare sleep duration and stress levels:

#METHOD
generate_spray_graph

#CODE
def generate_spray_graph(self):
    fig_spray = go.Figure()
    # add sleep duration data
    fig_spray.add_trace(go.Histogram2d(
        x = self.df['Age'],
        y = self.df['Sleep Duration'],
        colorscale=[
            [0, 'rgba(0, 0, 0, 0)'],
            [0.5, 'rgba(0, 130, 180, 0.5)'],
            [1, 'rgb(0, 130, 180)']
        ],
        nbinsx=60,
        nbinsy=30,
        opacity=0.75,
        colorbar=dict(title='Sleep Freq', x=1.0),
        showscale=True
    ))

    # add stress level data
    fig_spray.add_trace(go.Histogram2d(
        x = self.df['Age'],
        y = self.df['Stress Level'],
        colorscale=[
            [0, 'rgba(0, 0, 0, 0)'],
            [0.5, 'rgba(205, 92, 92, 0.5)'],
            [1, 'rgb(205, 92, 92)']
        ],
        nbinsx=60,
        nbinsy=30,
        opacity=0.75,
        colorbar=dict(title='Stress Freq', x=1.2),
        showscale=True
    ))

    # decorate
    fig_spray.update_layout(
        title='Sleep Duration vs Stress Level',
        xaxis_title='Age',
        yaxis_title='Value',
        barmode='overlay',
        template='plotly_dark'
    )

    # show
    return fig_spray

#TITLE
Close overview

#TEXT
### To ensure clarity, let us examine the primary tendency more closely:

#METHOD
generate_average_chart

#CODE
def generate_average_chart(self):
    # find every useful points
    def fnd(values: list) -> tuple:
        peaks = []
        downs = []
        mx = max(values)
        mn = min(values)
        for i in range(1, len(values) - 1):
            if values[i] > values[i - 1] and values[i] > values[i + 1] and values[i] != mx:
                peaks.append(i)
            elif values[i] < values[i - 1] and values[i] < values[i + 1] and values[i] != mn:
                downs.append(i)
        return downs, peaks

    fig_graph = go.Figure()
    
    # group data into two columns by average values: average sleep and average stress
    grouped_df = self.df.groupby('Age').agg(
        average_sleep=('Sleep Duration', 'mean'),
        average_stress=('Stress Level', 'mean')
    ).reset_index()

    # find peaks and downs
    sleep_min = grouped_df.loc[grouped_df["average_sleep"].idxmin()]
    sleep_max = grouped_df.loc[grouped_df["average_sleep"].idxmax()]

    stress_min = grouped_df.loc[grouped_df["average_stress"].idxmin()]
    stress_max = grouped_df.loc[grouped_df["average_stress"].idxmax()]

    # finding them
    sleep_mins, sleep_maxes = fnd(grouped_df['average_sleep'].values)
    stress_mins, stress_maxes = fnd(grouped_df['average_stress'].values)

    # define common line styles
    line_styles = {
        "average_sleep": dict(color='rgb(0, 130, 180)'),
        "average_stress": dict(color='rgb(205, 92, 92)'),
    }

    marker_styles = {
        "sleep_down": dict(color='blue', size=10, symbol="triangle-down"),
        "sleep_up": dict(color='blue', size=10, symbol="triangle-up"),
        "stress_down": dict(color='red', size=10, symbol="triangle-down"),
        "stress_up": dict(color='red', size=10, symbol="triangle-up"),
        "peak_marker": dict(size=10, symbol="arrow-bar-up"),
    }

    # add average lines
    for metric, style in line_styles.items():
        fig_graph.add_trace(go.Scatter(
            x=grouped_df['Age'],
            y=grouped_df[metric],
            mode='lines',
            name=f'Average {metric.split("_")[1]}',
            line=style
        ))

    # add markers for sleep and stress changes
    changes = [
        ("Age", "average_sleep", sleep_maxes, "sleep_down"),
        ("Age", "average_sleep", sleep_mins, "sleep_up"),
        ("Age", "average_stress", stress_maxes, "stress_down"),
        ("Age", "average_stress", stress_mins, "stress_up"),
    ]

    for age_col, metric_col, indices, marker_key in changes:
        fig_graph.add_trace(go.Scatter(
            x=grouped_df[age_col].iloc[indices],
            y=grouped_df[metric_col].iloc[indices],
            mode='markers',
            name=marker_key.replace('_', ' ').title(),
            marker=marker_styles[marker_key]
        ))

    # add peaks and downs
    peak_data = [
        ("Age", "average_sleep", sleep_min, sleep_max, 'blue', 'Sleep peak'),
        ("Age", "average_stress", stress_min, stress_max, 'red', 'Stress peak'),
    ]

    for age_col, metric_col, min_data, max_data, color, name in peak_data:
        fig_graph.add_trace(go.Scatter(
            x=[min_data[age_col], max_data[age_col]],
            y=[min_data[metric_col], max_data[metric_col]],
            mode='markers+text',
            name=name,
            text=["min", "max"],
            textposition="top center",
            marker=dict(color=color, **marker_styles["peak_marker"])
        ))

    # decorate
    fig_graph.update_layout(
        title='Average Sleep vs Average Stress',
        xaxis_title='Age',
        yaxis_title='Average Values',
        legend_title='Value',
        template='plotly_dark'
    )

    # show
    return fig_graph

#TEXT
### As we progress further in our research, our next diagram is aimed to present a comparative analysis of two variables: average sleep and average stress, across various age groups.

#TEXT
### These diagrams suggest a clear interaction between stress and sleep across various age groups. Managing stress during pivotal life stages, such as the mid-30s and 50s, could potentially stabilize sleep patterns. Long-term stress management may help mitigate the pronounced declines in sleep observed during stress peaks.

#TEXT
### Additionally, we observe a significant inverse relationship between sleep duration and stress levels. 

#TITLE
Physical activity, Sleep and Stress

#TEXT
### To further explore potential patterns, let us generate additional graphs:

#METHOD
generate_phys_sleep_chart

#CODE
def generate_phys_sleep_chart(self):
    fig_phyz = go.Figure()
    # group data by average values
    grouped_df = self.df.groupby('Age').agg(
        average_physical=('Physical Activity Level', 'mean'),
        average_quality=('Quality of Sleep', 'mean'),
        average_stress=('Stress Level', 'mean')
    ).reset_index()

    # add average sleep quality line
    fig_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_quality'],
        mode='lines',
        name='Average quality of sleep',
        line=dict(color='rgb(0, 130, 180)')
    ))

    # add average stress level line
    fig_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_stress'],
        mode='lines',
        name='Average Stress Level',
        line=dict(color='rgb(205, 92, 92)')
    ))

    # add physical activity line
    fig_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_physical'] / 10,
        mode='lines',
        name='Average Physical Activity Level',
        line=dict(color='orange')
    ))

    # decorate
    fig_phyz.update_layout(
        title='Average Sleep Quality vs Average Stress Level vs Average Physical Activity',
        xaxis_title='Age',
        yaxis_title='Average values',
        legend_title='Value',
        template='plotly_dark'
    )

    # show
    return fig_phyz

#TEXT
### This diagram presents a comparative analysis of three variables: sleep quality (blue line), stress level (red line) and physical activity level (yellow line), across various age groups.

#TEXT
### As evident from the available data, there is a clear and consistent correlation between them.

#TEXT
### Higher physical activity correlates with reduced stress and better sleep.

#TEXT
### Stressful events appear to disrupt sleep patterns and reduce physical activity levels.

#TEXT
### Encouraging consistent physical activity across all age groups may contribute to the maintenance of lower stress levels and enhanced sleep quality, particularly during periods of heightened stress, such as the mid-30s and early 50s.

#TEXT
### We observe a slight linear correlation between physical activity and stress levels after the age of 35. I intend to investigate the patterns between sleep duration, sleep quality and physical activity by making up another graph ->

#TITLE
Physical activity, Sleep Duration and Quality

#METHOD
generate_duration_vs_quality_vs_phys_chart

#CODE
def generate_duration_vs_quality_vs_phys_chart(self):
    fig_duration_vs_quality_vs_phyz = go.Figure()
    # group data by average values
    grouped_df = self.df.groupby('Age').agg(
        average_physical=('Physical Activity Level', 'mean'),
        average_quality=('Quality of Sleep', 'mean'),
        average_duration=('Sleep Duration', 'mean')
    ).reset_index()

    # add average sleep quality line
    fig_duration_vs_quality_vs_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_quality'],
        mode='lines',
        name='Average Quality of Sleep',
        line=dict(color='rgb(0, 130, 180)')
    ))

    # add average sleep duration line
    fig_duration_vs_quality_vs_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_duration'],
        mode='lines',
        name='Average Sleep Duration',
        line=dict(color='rgb(205, 92, 92)')
    ))

    # add average physical activity line
    fig_duration_vs_quality_vs_phyz.add_trace(go.Scatter(
        x=grouped_df['Age'],
        y=grouped_df['average_physical'] / 10,
        mode='lines',
        name='Average Physical Activity Level',
        line=dict(color='orange')
    ))

    # decorate
    fig_duration_vs_quality_vs_phyz.update_layout(
        title='Average Quality of Sleep vs Average Sleep Duration vs Average Physical Activity',
        xaxis_title='Age',
        yaxis_title='Average values',
        legend_title='Value',
        template='plotly_dark'
    )

    # show
    return fig_duration_vs_quality_vs_phyz

#TEXT
### The diagram presents a comparative analysis of three metrics: sleep quality (blue line), sleep duration (red line) and physical activity level (yellow line), across various age groups.

#TEXT
### The data indicates a positive correlation between physical activity and improved sleep outcomes, encompassing both quality and duration.

#TEXT
### Notably, the surge in activity coincides with enhancements in sleep metrics, particularly around the age of 50. Stress or lifestyle modifications that may have occurred around the age of 35 could potentially explain the simultaneous decline in sleep quality, duration and activity levels. Therefore, maintaining physical activity levels, especially after the age of 50, may contribute to preserving sleep quality even as natural aging progresses.

#TEXT
### It is evident that there is a significant correlation between these variables. However, from the age range of 45 to 54, there appears to be an exception. Previously, I have mentioned that stress levels can influence physical activity. Let us now examine the numerical statistics.

#TITLE
Pearson's Correlation

#TEXT
### I am employing Pearson’s correlation formula to calculate the correlation coefficients.

#METHOD
generate_pearsons_mtx

#CODE
def generate_pearsons_mtx(self):
    interest_columns = ['Sleep Duration', 'Quality of Sleep', 'Physical Activity Level', 'Stress Level']
    grouped_df = self.df[interest_columns]

    correl_mtx = grouped_df.corr(method='pearson')
    fig_temp = px.imshow(
        correl_mtx,
        text_auto=True,
        color_continuous_scale='RdBu',
        range_color=[-1, 1],
        labels=dict(color="Pearson's Corellation"),
        x=correl_mtx.columns,
        y=correl_mtx.index,
        title="Pearson's Correlations"
    )

    fig_temp.update_layout(
        xaxis_title="Values",
        yaxis_title="Values",
        template='plotly_dark'
    )

    return fig_temp

#TEXT
### This table presents correlations between Sleep Duration, Sleep Quality, Physical Activity Level and Stress Level.

#TEXT
### A value closer to 1 indicates a linear relationship.

#TEXT
### A value closer to -1 suggests an inverse relationship.

#TEXT
### A value of 0 implies no correlation.

#TEXT
### The findings reveal that sleep duration and sleep quality significantly reduce stress levels. Conversely, physical activity slightly increases sleep duration and quality, although its impact on stress levels is minimal.

#TITLE
Conclusion

#TEXT
# Conclusion

#TEXT
### Key Stress Points: The mid-30s and early 50s are critical life stages during which stress levels significantly impact sleep and activity patterns.

#TEXT
### Role of Physical Activity: Engaging in regular physical activity emerges as a crucial factor in mitigating stress and enhancing both sleep quality and duration.

#TEXT
### Workforce Dynamics: Stress levels vary considerably among professions, with healthcare workers, for instance, requiring targeted interventions to manage their elevated stress burdens.

#TEXT
### Recommendations: Organizations and individuals should prioritize stress management strategies, encourage physical activity and maintain a healthy work-life balance to optimize health and well-being across diverse professions and age groups.
